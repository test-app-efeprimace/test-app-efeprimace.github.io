import{G as u,s as n,b as i,r as c,j as f}from"./index-Ficy73Kv.js";const S=u("featureFlags",()=>{const{token:l}=n(i()),e=c(JSON.parse(localStorage.getItem("featureFlags")||"{}"));return{featureFlags:e,loadFeatureFlags:async()=>{try{const a=await fetch(`${f().backendUrlFC}/api/feature-flags`,{method:"GET",headers:{Authorization:`Bearer ${l.value}`}});if(!a.ok)throw new Error("Failed to fetch feature flags");const r=(await a.json()).reduce((o,s)=>(o[s.nombre]=s.is_active,o),{});e.value=r,localStorage.setItem("featureFlags",JSON.stringify(r)),console.log("Feature flags loaded:",e.value)}catch(a){throw console.error("Error loading feature flags:",a),new Error("Failed to load feature flags.")}},setFeatureFlag:(a,t)=>{(typeof e.value!="object"||e.value===null)&&(console.warn("featureFlags.value is not an object, initializing to empty object."),e.value={}),e.value[a]=t,localStorage.setItem("featureFlags",JSON.stringify(e.value))},isFeatureActive:a=>e.value[a]===!0}});export{S as u};
